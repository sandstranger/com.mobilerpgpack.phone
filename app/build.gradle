plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    id 'com.google.devtools.ksp' version '2.2.20-2.0.3'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('release-keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace 'com.mobilerpgpack.phone'
    compileSdk versions.target_sdk

    flavorDimensions "store"
    productFlavors {
        google {
            dimension "store"
            buildConfigField "boolean", "FDROID_BUILD", "false"
        }
        fdroid {
            dimension "store"
            buildConfigField "boolean", "FDROID_BUILD", "true"
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    defaultConfig {
        applicationId "com.mobilerpgpack.phone"
        minSdk versions.min_sdk
        targetSdk versions.target_sdk
        versionCode 13
        versionName "1.0.4.7"

        ndk {
            abiFilters = []
            abiFilters.addAll(abi_filters)
        }

        externalNativeBuild {
            cmake {
                arguments"-DANDROID_PLATFORM=android-$versions.native_android_platform_version",
                        "-DCMAKE_CXX_FLAGS=-O3 -fno-stack-protector -fno-builtin -U_FORTIFY_SOURCE -flto=thin -fno-delete-null-pointer-checks " +
                                "-fno-strict-aliasing -Wno-c++11-narrowing -Wno-writable-strings -w -fmax-errors=5",
                        "-DCMAKE_C_FLAGS=-O3 -fno-stack-protector -fno-builtin -U_FORTIFY_SOURCE -fno-delete-null-pointer-checks " +
                                "-fno-strict-aliasing -flto=thin -Wno-writable-strings -w -fmax-errors=5",
                        "-DCMAKE_SHARED_LINKER_FLAGS=-flto=thin -Wl,-plugin-opt=-emulated-tls -fuse-ld=lld -Wl,--build-id=none",
                        "-DCMAKE_VERBOSE_MAKEFILE=OFF"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "$rootProject.rootDir/CMakeLists.txt"
            version versions.cmake_version
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            aaptOptions {
                noCompress "bin","spm","json","txt","sf2","ttf"
            }
        }
        debug {
            jniDebuggable true
            ndk {
                debugSymbolLevel 'FULL' // сохраняет символы
            }
            signingConfig signingConfigs.debug
            aaptOptions {
                noCompress "bin","spm","json","txt","sf2","ttf"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.15'
    }
    packagingOptions {
        jniLibs {
            useLegacyPackaging true
        }
    }
    buildToolsVersion versions.build_tools_version
    ndkVersion versions.ndk_version
}

preBuild.dependsOn ':fluidsynth:build',':CTranslate2Proxy:build',':Translator:build',
        ':sdl2:android-project:app:build', ':openal:build',
        ':sdl2-mixer:build',':sdl2-ttf:build', ':NG-GL4ES:build'

dependencies {
    implementation project(':sdl2:android-project:app')
    implementation (project(":openal"))
    implementation(project(":sdl2-mixer"))
    implementation(project(":fluidsynth"))
    implementation (project(":file-picker"))
    implementation (project(":sdl2-ttf"))
    implementation (project(":CTranslate2Proxy"))
    implementation (project(":Translator"))
    implementation (project(":NG-GL4ES"))

    implementation libs.androidx.compose.material.icons.core.android
    implementation libs.androidx.compose.material.icons.extended.android
    implementation(libs.slf4j.api)
    compileOnly libs.projectlombok.lombok
    annotationProcessor libs.projectlombok.lombok
    implementation libs.converter.gson
    implementation libs.gson
    implementation(libs.retrofit)
    implementation (libs.androidx.room.runtime)
    ksp libs.androidx.room.compiler
    implementation (libs.androidx.room.ktx)
    googleImplementation (libs.translate)
    googleImplementation (libs.kotlinx.coroutines.play.services)
    implementation(libs.okhttp)
    implementation (libs.core)
    implementation(libs.zip4j)
    implementation (libs.androidx.lifecycle.viewmodel.compose)
    implementation (libs.androidx.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.material3)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.ui)
    implementation(libs.androidx.ui.tooling.preview)
    implementation(libs.androidx.datastore.preferences)
    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.fragment.ktx
    implementation libs.androidx.preference.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.navigation.compose
}